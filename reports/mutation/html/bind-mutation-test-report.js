document.querySelector('mutation-test-report-app').report = {"files":{"/home/cie/git/y/lib/builtins.js":{"language":"javascript","mutants":[{"id":"7","location":{"end":{"column":39,"line":6},"start":{"column":52,"line":5}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"NoCoverage"},{"id":"8","location":{"end":{"column":38,"line":6},"start":{"column":14,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"NoCoverage"},{"id":"0","location":{"end":{"column":2,"line":8},"start":{"column":18,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: tests builtin functions and"},{"id":"2","location":{"end":{"column":68,"line":2},"start":{"column":45,"line":2}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: tests builtin functions math +"},{"id":"3","location":{"end":{"column":68,"line":2},"start":{"column":55,"line":2}},"mutatorName":"ArithmeticOperator","replacement":"a - y(b, env)","status":"Killed","description":"Killed by: tests builtin functions math +"},{"id":"4","location":{"end":{"column":49,"line":3},"start":{"column":8,"line":3}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: tests builtin functions and"},{"id":"5","location":{"end":{"column":45,"line":4},"start":{"column":10,"line":4}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: tests builtin functions quote"},{"id":"1","location":{"end":{"column":72,"line":2},"start":{"column":8,"line":2}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: tests builtin functions math +"},{"id":"6","location":{"end":{"column":39,"line":6},"start":{"column":11,"line":5}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"9","location":{"end":{"column":61,"line":7},"start":{"column":9,"line":7}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"module.exports = {\n  \"+\": ({ \"+\": els }, env, y) => els.reduce((a, b) => a + y(b, env), 0),\n  and: ({ and: value }, env, y) => y(value, env),\n  quote: ({ quote: value }, env, y) => value,\n  lambda: ({ lambda: param, ...block }, env, y) => (arg) =>\n    y(block, { ...env, [param]: arg }),\n  call: ({ call: fn, with: arg }, env, y) => y(fn, env)(arg),\n};\n"},"/home/cie/git/y/lib/index.js":{"language":"javascript","mutants":[{"id":"20","location":{"end":{"column":4,"line":11},"start":{"column":21,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"NoCoverage"},{"id":"10","location":{"end":{"column":20,"line":1},"start":{"column":12,"line":1}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: tests primitive values numbers"},{"id":"11","location":{"end":{"column":2,"line":12},"start":{"column":14,"line":2}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed","description":"Killed by: tests errors undefined function"},{"id":"12","location":{"end":{"column":4,"line":8},"start":{"column":21,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Killed","description":"Killed by: tests primitive values null"},{"id":"13","location":{"end":{"column":19,"line":4},"start":{"column":9,"line":4}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: tests errors undefined function"},{"id":"15","location":{"end":{"column":19,"line":4},"start":{"column":9,"line":4}},"mutatorName":"EqualityOperator","replacement":"x !== null","status":"Killed","description":"Killed by: tests primitive values null"},{"id":"14","location":{"end":{"column":19,"line":4},"start":{"column":9,"line":4}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: tests primitive values null"},{"id":"16","location":{"end":{"column":22,"line":6},"start":{"column":9,"line":6}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: tests builtin functions and"},{"id":"17","location":{"end":{"column":22,"line":6},"start":{"column":9,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: tests errors undefined function"},{"id":"19","location":{"end":{"column":72,"line":6},"start":{"column":49,"line":6}},"mutatorName":"StringLiteral","replacement":"``","status":"Killed","description":"Killed by: tests errors undefined function"},{"id":"18","location":{"end":{"column":22,"line":6},"start":{"column":9,"line":6}},"mutatorName":"BooleanLiteral","replacement":"key in env","status":"Killed","description":"Killed by: tests errors undefined function"},{"id":"21","location":{"end":{"column":36,"line":14},"start":{"column":11,"line":13}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Killed","description":"Killed by: tests primitive values numbers"},{"id":"22","location":{"end":{"column":24,"line":14},"start":{"column":4,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed","description":"Killed by: tests primitive values numbers"},{"id":"23","location":{"end":{"column":24,"line":14},"start":{"column":4,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed","description":"Killed by: tests primitive values numbers"},{"id":"24","location":{"end":{"column":24,"line":14},"start":{"column":4,"line":14}},"mutatorName":"LogicalOperator","replacement":"EVAL[typeof x] && ID","status":"Killed","description":"Killed by: tests primitive values numbers"}],"source":"const ID = (x) => x;\nconst EVAL = {\n  object(x, env, y) {\n    if (x === null) return null;\n    const key = Object.keys(x)[0];\n    if (!(key in env)) throw new ReferenceError(`${key} is not defined`);\n    return env[key](x, env, y);\n  },\n  string(x, env, y) {\n    return env[x];\n  },\n};\nconst y = (x, env = require(\"./builtins.js\")) =>\n  (EVAL[typeof x] || ID)(x, env, y);\n\nmodule.exports = y;\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};